var documenterSearchIndex = {"docs":
[{"location":"#GalerkinEtena.jl-1","page":"Documentation","title":"GalerkinEtena.jl","text":"","category":"section"},{"location":"#","page":"Documentation","title":"Documentation","text":"Documentation for GalerkinEtena.jl","category":"page"},{"location":"#","page":"Documentation","title":"Documentation","text":"Modules = [GalerkinEtena]\nOrder   = [:type, :function]","category":"page"},{"location":"#GalerkinEtena.GLT-Tuple{Int64}","page":"Documentation","title":"GalerkinEtena.GLT","text":"GLT(N) computes the Gau√ü-Lobatto-–ß–µ–±—ã—à—ë–≤ points defined by \n\nT_k = -cos left( frack-1n-1pi right)\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.JacobiGL-Tuple{Float64,Float64,Int64}","page":"Documentation","title":"GalerkinEtena.JacobiGL","text":"JacobiGL(Œ±::Float64, Œ≤::Float64, N::Int)\n\nCompute the N'th order Gau√ü Lobatto quadrature formula points\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.JacobiGQ-Tuple{Float64,Float64,Int64}","page":"Documentation","title":"GalerkinEtena.JacobiGQ","text":"JacobiGQ(Œ±::Float64,Œ≤::Float64,N::Int)\n\nreturn the N'th Gau√ü quadrature points\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.JacobiP-Tuple{Array{Float64,N} where N,Float64,Float64,Int64}","page":"Documentation","title":"GalerkinEtena.JacobiP","text":"JacobiP evaluate the Jacobi polynomial of type (Œ±,Œ≤) > -1 (Œ±+Œ≤ ‚â¢ -1) at points x for order N  Note : the Jacobi polynomial is normalize by a factor Œ≥‚Çô = ‚àö(2/(2n+1)) taken from nodal-dg matlab code [https://github.com/tcew/nodal-dg]\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.Legendre-Tuple{Array{Float64,N} where N,Int64}","page":"Documentation","title":"GalerkinEtena.Legendre","text":"Legendre(x::Array{Float64}, n::Int) computes the pair\n\nP_ij = P^j(x_i) mbox and  P_ij = fracdP^jdx(x_i) mbox where \nP^n(x) = left(frac2^nnright)fracd^ndx^nleft(x^2-1)^nright\n\nNote \n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.computeElementaryMatrices-Tuple{Array{Float64,1},Int64}","page":"Documentation","title":"GalerkinEtena.computeElementaryMatrices","text":"computeElementaryMatrices(Œæ::Array{Float64,1}, Np::Int) computes the elementary matrices  ùì•, ùìì·µ£ on the Gau√ü-Lobatto grid on [-1,1]\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.computeMask-Tuple{Array{Float64,1}}","page":"Documentation","title":"GalerkinEtena.computeMask","text":"computeMask(Œæ::Array{Float64,1}) retrieves the index of the boundary nodes on the reference element\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.genGrid-Tuple{Mesh1D,Array{Float64,N} where N}","page":"Documentation","title":"GalerkinEtena.genGrid","text":"genGrid(m::Mesh1D, Œæ::Array{Float64}) generate a matrix corresponding to all degree of freedom points : K x #Œæ\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.integrate-Tuple{Any,GalerkinEtena.QuadratureFormula}","page":"Documentation","title":"GalerkinEtena.integrate","text":"integrate(f,q)\n\ncomputes the numerical approximation of the integral of f on the interval [-1,1] using q as a Quadrature formula\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.vander","page":"Documentation","title":"GalerkinEtena.vander","text":"vander(x, n) computes the Vandermonde matrix V(x‚ÇÅ, x‚ÇÇ, ... , x‚Çö) defined by\n\nV_ij = x_j^i-1_ij  forall  i=1cdotsp  j = 1cdotsn\n\noptional argument n enable us to choose the number of rows\n\n\n\n\n\n","category":"function"},{"location":"#GalerkinEtena.DGDiscretization-Tuple{Mesh1D,Array{Float64,N} where N}","page":"Documentation","title":"GalerkinEtena.DGDiscretization","text":"[x, vmapM, vmapP] =  DGDiscretization(m::Mesh1D, Œæ::Array{Float64,1})\n\nreturn a DG discretization along the mesh and the local discretization Œæ\n\n\n\n\n\n","category":"method"},{"location":"#GalerkinEtena.legendre-Tuple{Array{Float64,N} where N,Int64}","page":"Documentation","title":"GalerkinEtena.legendre","text":"legendre(x::Array{Float64}, n::Int) evaluate the legendre polynomial of degree n at x\n\n\n\n\n\n","category":"method"}]
}
